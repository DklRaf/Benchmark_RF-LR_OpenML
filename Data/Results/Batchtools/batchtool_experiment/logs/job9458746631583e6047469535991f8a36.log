### [bt 2017-03-20 23:30:57]: This is batchtools v0.9.2
### [bt 2017-03-20 23:30:57]: Starting calculation of 1 jobs
### [bt 2017-03-20 23:30:57]: Setting working directory to '/home/rstudio/Project/IBE_Benchmark-OpenML/Data/Batchtools'
### [bt 2017-03-20 23:30:57]: Memory measurement disabled
### [bt 2017-03-20 23:30:57]: Starting job [batchtools job.id=163]
Generating problem instance for problem '826' ...
Applying algorithm 'eval' on problem '826' ...
Downloading from 'http://www.openml.org/api/v1/data/826' to '/tmp/RtmpaPPl1w/cache/datasets/826/description.xml'.
Downloading from 'https://www.openml.org/data/download/53360/sensory.arff' to '/tmp/RtmpaPPl1w/cache/datasets/826/dataset.arff'
Task: sensory, Learner: classif.logreg
[Resample] repeated cross-validation iter 1: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.617,brier.test.mean=0.238,auc.test.mean=0.643,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 2: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.687,brier.test.mean=0.218,auc.test.mean=0.685,timetrain.test.mean=0.005
[Resample] repeated cross-validation iter 3: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.629,brier.test.mean=0.22,auc.test.mean=0.689,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 4: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.647,brier.test.mean=0.225,auc.test.mean=0.655,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 5: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.623,brier.test.mean=0.239,auc.test.mean=0.615,timetrain.test.mean=0.008
[Resample] repeated cross-validation iter 6: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.652,brier.test.mean=0.222,auc.test.mean=0.66,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 7: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.678,brier.test.mean=0.213,auc.test.mean=0.695,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 8: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.609,brier.test.mean=0.226,auc.test.mean=0.664,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 9: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.626,brier.test.mean=0.23,auc.test.mean=0.667,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 10: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.629,brier.test.mean=0.226,auc.test.mean=0.661,timetrain.test.mean=0.009
[Resample] repeated cross-validation iter 11: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean= 0.6,brier.test.mean=0.236,auc.test.mean=0.629,timetrain.test.mean=0.071
[Resample] repeated cross-validation iter 12: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.638,brier.test.mean=0.227,auc.test.mean=0.66,timetrain.test.mean=0.011
[Resample] repeated cross-validation iter 13: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.614,brier.test.mean=0.21,auc.test.mean=0.717,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 14: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.617,brier.test.mean=0.242,auc.test.mean=0.615,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 15: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.621,brier.test.mean=0.25,auc.test.mean=0.61,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 16: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.667,brier.test.mean=0.221,auc.test.mean=0.678,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 17: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.681,brier.test.mean=0.226,auc.test.mean=0.656,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 18: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.67,brier.test.mean=0.221,auc.test.mean=0.69,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 19: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.569,brier.test.mean=0.235,auc.test.mean=0.634,timetrain.test.mean=0.009
[Resample] repeated cross-validation iter 20: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.652,brier.test.mean=0.209,auc.test.mean=0.714,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 21: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.635,brier.test.mean=0.224,auc.test.mean=0.663,timetrain.test.mean=0.008
[Resample] repeated cross-validation iter 22: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.643,brier.test.mean=0.232,auc.test.mean=0.642,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 23: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.626,brier.test.mean=0.237,auc.test.mean=0.619,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 24: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.678,brier.test.mean=0.221,auc.test.mean=0.677,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 25: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.621,brier.test.mean=0.246,auc.test.mean=0.62,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 26: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean= 0.6,brier.test.mean=0.223,auc.test.mean=0.675,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 27: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.626,brier.test.mean=0.241,auc.test.mean=0.622,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 28: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.638,brier.test.mean=0.232,auc.test.mean=0.631,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 29: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.737,brier.test.mean=0.208,auc.test.mean=0.723,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 30: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.621,brier.test.mean=0.236,auc.test.mean=0.647,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 31: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.649,brier.test.mean=0.224,auc.test.mean=0.673,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 32: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.655,brier.test.mean=0.225,auc.test.mean=0.662,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 33: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.638,brier.test.mean=0.207,auc.test.mean=0.721,timetrain.test.mean=0.009
[Resample] repeated cross-validation iter 34: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.652,brier.test.mean=0.217,auc.test.mean=0.687,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 35: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.565,brier.test.mean=0.257,auc.test.mean=0.584,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 36: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.612,brier.test.mean=0.251,auc.test.mean=0.574,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 37: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.67,brier.test.mean=0.217,auc.test.mean=0.688,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 38: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.603,brier.test.mean=0.253,auc.test.mean=0.602,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 39: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.667,brier.test.mean=0.218,auc.test.mean=0.685,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 40: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.713,brier.test.mean=0.201,auc.test.mean=0.74,timetrain.test.mean=0.008
[Resample] repeated cross-validation iter 41: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.647,brier.test.mean=0.224,auc.test.mean=0.684,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 42: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.658,brier.test.mean=0.22,auc.test.mean=0.688,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 43: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.643,brier.test.mean=0.231,auc.test.mean=0.632,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 44: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.687,brier.test.mean=0.211,auc.test.mean=0.706,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 45: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.543,brier.test.mean=0.266,auc.test.mean=0.563,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 46: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.603,brier.test.mean=0.241,auc.test.mean=0.592,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 47: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.635,brier.test.mean=0.232,auc.test.mean=0.639,timetrain.test.mean=0.009
[Resample] repeated cross-validation iter 48: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.649,brier.test.mean=0.219,auc.test.mean=0.682,timetrain.test.mean=0.007
[Resample] repeated cross-validation iter 49: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.704,brier.test.mean=0.209,auc.test.mean=0.721,timetrain.test.mean=0.006
[Resample] repeated cross-validation iter 50: Warning in predict.lm(object, newdata, se.fit, scale = 1, type = ifelse(type ==  :
  prediction from a rank-deficient fit may be misleading
acc.test.mean=0.638,brier.test.mean=0.25,auc.test.mean=0.612,timetrain.test.mean=0.006
[Resample] Aggr. Result: acc.test.mean=0.64,brier.test.mean=0.228,auc.test.mean=0.658,timetrain.test.mean=0.00794
Task: sensory, Learner: classif.randomForest
[Resample] repeated cross-validation iter 1: acc.test.mean=0.635,brier.test.mean=0.214,auc.test.mean=0.739,timetrain.test.mean=0.313
[Resample] repeated cross-validation iter 2: acc.test.mean=0.73,brier.test.mean=0.187,auc.test.mean=0.78,timetrain.test.mean=0.231
[Resample] repeated cross-validation iter 3: acc.test.mean=0.716,brier.test.mean=0.179,auc.test.mean=0.813,timetrain.test.mean=0.307
[Resample] repeated cross-validation iter 4: acc.test.mean=0.707,brier.test.mean=0.193,auc.test.mean=0.762,timetrain.test.mean=0.158
[Resample] repeated cross-validation iter 5: acc.test.mean=0.675,brier.test.mean=0.204,auc.test.mean=0.736,timetrain.test.mean=0.229
[Resample] repeated cross-validation iter 6: acc.test.mean=0.678,brier.test.mean=0.196,auc.test.mean=0.756,timetrain.test.mean=0.308
[Resample] repeated cross-validation iter 7: acc.test.mean=0.73,brier.test.mean=0.192,auc.test.mean=0.772,timetrain.test.mean=0.158
[Resample] repeated cross-validation iter 8: acc.test.mean=0.722,brier.test.mean=0.193,auc.test.mean=0.767,timetrain.test.mean=0.308
[Resample] repeated cross-validation iter 9: acc.test.mean=0.713,brier.test.mean=0.189,auc.test.mean=0.773,timetrain.test.mean=0.161
[Resample] repeated cross-validation iter 10: acc.test.mean=0.707,brier.test.mean=0.195,auc.test.mean=0.75,timetrain.test.mean=0.306
[Resample] repeated cross-validation iter 11: acc.test.mean=0.713,brier.test.mean=0.195,auc.test.mean=0.761,timetrain.test.mean=0.238
[Resample] repeated cross-validation iter 12: acc.test.mean=0.707,brier.test.mean=0.202,auc.test.mean=0.744,timetrain.test.mean=0.229
[Resample] repeated cross-validation iter 13: acc.test.mean=0.763,brier.test.mean=0.165,auc.test.mean=0.839,timetrain.test.mean=0.315
[Resample] repeated cross-validation iter 14: acc.test.mean=0.626,brier.test.mean=0.222,auc.test.mean=0.689,timetrain.test.mean=0.157
[Resample] repeated cross-validation iter 15: acc.test.mean=0.664,brier.test.mean=0.21,auc.test.mean=0.719,timetrain.test.mean=0.227
[Resample] repeated cross-validation iter 16: acc.test.mean=0.711,brier.test.mean=0.201,auc.test.mean=0.739,timetrain.test.mean=0.309
[Resample] repeated cross-validation iter 17: acc.test.mean=0.655,brier.test.mean=0.222,auc.test.mean=0.689,timetrain.test.mean=0.155
[Resample] repeated cross-validation iter 18: acc.test.mean=0.739,brier.test.mean=0.183,auc.test.mean=0.801,timetrain.test.mean=0.23
[Resample] repeated cross-validation iter 19: acc.test.mean=0.707,brier.test.mean=0.195,auc.test.mean=0.759,timetrain.test.mean=0.304
[Resample] repeated cross-validation iter 20: acc.test.mean=0.678,brier.test.mean=0.195,auc.test.mean=0.76,timetrain.test.mean=0.161
[Resample] repeated cross-validation iter 21: acc.test.mean=0.696,brier.test.mean=0.193,auc.test.mean=0.774,timetrain.test.mean=0.309
[Resample] repeated cross-validation iter 22: acc.test.mean=0.696,brier.test.mean=0.198,auc.test.mean=0.758,timetrain.test.mean=0.161
[Resample] repeated cross-validation iter 23: acc.test.mean=0.67,brier.test.mean=0.21,auc.test.mean=0.702,timetrain.test.mean=0.307
[Resample] repeated cross-validation iter 24: acc.test.mean=0.626,brier.test.mean=0.218,auc.test.mean=0.701,timetrain.test.mean=0.23
[Resample] repeated cross-validation iter 25: acc.test.mean=0.698,brier.test.mean=0.205,auc.test.mean=0.736,timetrain.test.mean=0.313
[Resample] repeated cross-validation iter 26: acc.test.mean=0.652,brier.test.mean=0.209,auc.test.mean=0.723,timetrain.test.mean=0.235
[Resample] repeated cross-validation iter 27: acc.test.mean=0.687,brier.test.mean=0.205,auc.test.mean=0.71,timetrain.test.mean=0.164
[Resample] repeated cross-validation iter 28: acc.test.mean=0.69,brier.test.mean=0.209,auc.test.mean=0.711,timetrain.test.mean=0.378
[Resample] repeated cross-validation iter 29: acc.test.mean=0.728,brier.test.mean=0.183,auc.test.mean=0.799,timetrain.test.mean=0.312
[Resample] repeated cross-validation iter 30: acc.test.mean=0.655,brier.test.mean=0.208,auc.test.mean=0.732,timetrain.test.mean=0.322
[Resample] repeated cross-validation iter 31: acc.test.mean=0.711,brier.test.mean= 0.2,auc.test.mean=0.741,timetrain.test.mean=0.236
[Resample] repeated cross-validation iter 32: acc.test.mean=0.647,brier.test.mean=0.194,auc.test.mean=0.774,timetrain.test.mean=0.23
[Resample] repeated cross-validation iter 33: acc.test.mean=0.716,brier.test.mean=0.197,auc.test.mean=0.734,timetrain.test.mean=0.31
[Resample] repeated cross-validation iter 34: acc.test.mean=0.739,brier.test.mean=0.169,auc.test.mean=0.831,timetrain.test.mean=0.313
[Resample] repeated cross-validation iter 35: acc.test.mean=0.626,brier.test.mean=0.214,auc.test.mean=0.713,timetrain.test.mean=0.237
[Resample] repeated cross-validation iter 36: acc.test.mean=0.69,brier.test.mean=0.205,auc.test.mean=0.731,timetrain.test.mean=0.306
[Resample] repeated cross-validation iter 37: acc.test.mean=0.722,brier.test.mean=0.184,auc.test.mean=0.793,timetrain.test.mean=0.31
[Resample] repeated cross-validation iter 38: acc.test.mean=0.664,brier.test.mean=0.21,auc.test.mean=0.717,timetrain.test.mean=0.304
[Resample] repeated cross-validation iter 39: acc.test.mean=0.658,brier.test.mean=0.214,auc.test.mean=0.708,timetrain.test.mean=0.241
[Resample] repeated cross-validation iter 40: acc.test.mean=0.722,brier.test.mean=0.177,auc.test.mean=0.814,timetrain.test.mean=0.382
[Resample] repeated cross-validation iter 41: acc.test.mean=0.672,brier.test.mean=0.207,auc.test.mean=0.708,timetrain.test.mean=0.314
[Resample] repeated cross-validation iter 42: acc.test.mean=0.684,brier.test.mean=0.192,auc.test.mean=0.772,timetrain.test.mean=0.31
[Resample] repeated cross-validation iter 43: acc.test.mean=0.704,brier.test.mean=0.186,auc.test.mean=0.787,timetrain.test.mean=0.314
[Resample] repeated cross-validation iter 44: acc.test.mean=0.696,brier.test.mean=0.205,auc.test.mean=0.738,timetrain.test.mean=0.164
[Resample] repeated cross-validation iter 45: acc.test.mean=0.638,brier.test.mean=0.22,auc.test.mean=0.698,timetrain.test.mean=0.341
[Resample] repeated cross-validation iter 46: acc.test.mean=0.595,brier.test.mean=0.228,auc.test.mean=0.661,timetrain.test.mean=0.325
[Resample] repeated cross-validation iter 47: acc.test.mean=0.687,brier.test.mean=0.21,auc.test.mean=0.716,timetrain.test.mean=0.323
[Resample] repeated cross-validation iter 48: acc.test.mean=0.702,brier.test.mean=0.194,auc.test.mean=0.755,timetrain.test.mean=0.32
[Resample] repeated cross-validation iter 49: acc.test.mean=0.678,brier.test.mean=0.201,auc.test.mean=0.747,timetrain.test.mean=0.324
[Resample] repeated cross-validation iter 50: acc.test.mean=0.681,brier.test.mean=0.191,auc.test.mean=0.783,timetrain.test.mean=0.241
[Resample] Aggr. Result: acc.test.mean=0.688,brier.test.mean=0.199,auc.test.mean=0.748,timetrain.test.mean=0.268

### [bt 2017-03-20 23:31:14]: Job terminated successfully [batchtools job.id=163]
### [bt 2017-03-20 23:31:14]: Calculation finished!
